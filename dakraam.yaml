substitutions:
  name: dakraam
  friendly_name: dakraam
esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  name_add_mac_suffix: false
  project:
    name: esphome.web
    version: ‘1.0’
esp32:
  board: esp32dev
  framework:
    type: arduino
# Enable logging
logger:
# Enable Home Assistant API
api:
# Allow Over-The-Air updates
ota:
# Allow provisioning Wi-Fi via serial
improv_serial:
wifi:
  # Set up a wifi access point
  ap: {}
# In combination with the `ap` this allows the user
# to provision wifi credentials to the device via WiFi AP.
captive_portal:
dashboard_import:
  package_import_url: github://esphome/example-configs/esphome-web/esp32.yaml@main
  import_full_config: true
# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
esp32_improv:
  authorizer: none
# To have a “next url” for improv serial
web_server:


switch:
  - platform: gpio
    id: dakraam_open
    pin: GPIO32
    name: "Dakraam open"
    internal: true

  - platform: gpio
    id: dakraam_close
    pin: GPIO33
    name: "Dakraam dicht"
    internal: true

cover:
  - platform: template
    name: "Dakraam"
    open_action:
      # Cancel any previous action
      - switch.turn_off: dakraam_close
      # Turn the OPEN switch on briefly
      - switch.turn_on: dakraam_open
      - delay: 30s
      - switch.turn_off: dakraam_open
    close_action:
      - switch.turn_off: dakraam_open
      - switch.turn_on: dakraam_close
      - delay: 30s
      - switch.turn_off: dakraam_close
    stop_action:
      - switch.turn_on: dakraam_open
      - switch.turn_on: dakraam_close
      - delay: 0.5s
      - switch.turn_off: dakraam_open
      - switch.turn_off: dakraam_close
    optimistic: true
    assumed_state: true