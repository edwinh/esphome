substitutions:
  name: kaku
  friendly_name: "KlikAanKlikUit"

esphome:
  name: $name
  includes: modules/kaku.h
  
esp32:
  board: nodemcu-32s
  framework:
    type: arduino

# Enable logging
logger:
  # level: DEBUG

# Enable Home Assistant API
api:
  password: ""

ota:
  password: ""

web_server:
  port: 80

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true
  reboot_timeout: 0s
  power_save_mode: high
  manual_ip:
    static_ip: !secret ip_kaku
    gateway: !secret ip_gateway
    subnet: !secret ip_subnet

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "ESP_${name}"
    password: !secret wifi_password

# captive_portal:

# remote_receiver:
#   pin: GPIO33
#   dump: 
#     - rc_switch
#   # Settings to optimize recognition of RF devices
#   tolerance: 50%
#   filter: 250us
#   idle: 4ms
#   buffer_size: 2kb

remote_transmitter:
  pin: GPIO32
  # RF uses a 100% carrier signal
  carrier_duty_percent: 100%

# sensor:
#   - platform: uptime
#     internal: false
#     id: ${name}_uptime
#     name: "${friendly_name} uptime"

switch:
  - platform: template
    id: kaku_dinner
    name: Kaku Dinner Table
    optimistic: true
    turn_on_action:
      - remote_transmitter.transmit_raw:
          code: !lambda |-
            KlikAanKlikUitNew kaku(1013, 260);
            return kaku.dim(2, 10);
          repeat:
            times: 7
    turn_off_action:
      - remote_transmitter.transmit_raw:
          code: !lambda |-
            KlikAanKlikUitNew kaku(1013, 260);
            return kaku.off(2);
          repeat:
            times: 7
  - platform: template
    id: kaku_D1
    name: Kaku D1
    optimistic: true
    turn_on_action:
      - remote_transmitter.transmit_raw:
          code: !lambda |-
            KlikAanKlikUitOld kaku;
            return kaku.on('D', 1);
          repeat:
            times: 4
    turn_off_action:
      - remote_transmitter.transmit_raw:
          code: !lambda |-
            KlikAanKlikUitOld kaku;
            return kaku.off('D', 1);
          repeat:
            times: 4
  - platform: template
    id: kaku_D2
    name: Kaku D2
    optimistic: true
    turn_on_action:
      - remote_transmitter.transmit_raw:
          code: !lambda |-
            KlikAanKlikUitOld kaku;
            return kaku.on('D', 2);
          repeat:
            times: 4
    turn_off_action:
      - remote_transmitter.transmit_raw:
          code: !lambda |-
            KlikAanKlikUitOld kaku;
            return kaku.off('D', 2);
          repeat:
            times: 4
  - platform: template
    id: kaku_D3
    name: Kaku D3
    optimistic: true
    turn_on_action:
      - remote_transmitter.transmit_raw:
          code: !lambda |-
            KlikAanKlikUitOld kaku;
            return kaku.on('D', 3);
          repeat:
            times: 4
    turn_off_action:
      - remote_transmitter.transmit_raw:
          code: !lambda |-
            KlikAanKlikUitOld kaku;
            return kaku.off('D', 3);
          repeat:
            times: 4